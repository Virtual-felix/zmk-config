/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | PLAY  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |  \|   |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |  ;:   |  '"   |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |   TG2  |  |  RALT |  N   |  M    |  ,<   | .>   |  /?   | BACKS |
//                            | WIN  | LALT |  SPACE |  | RAISE | ENTER|  DEL  |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3 &kp N4   &kp N5                        &kp N6  &kp N7 &kp N8    &kp N9  &kp N0   &kp C_PP
&kp TAB   &kp Q  &kp W  &kp E  &kp R    &kp T                         &kp Y   &kp U  &kp I     &kp O   &kp P    &kp BSLH
&kp LSHFT &kp A  &kp S  &kp D  &kp F    &kp G                         &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X  &kp C  &kp V    &kp B    &tog LOWER &kp RALT  &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSPC
                               &kp LGUI &kp LALT &kp SPACE  &mo RAISE &kp RET &kp DEL
            >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |        |  |       |      |       |       |      | SPACE |       |
//                            |      |      |        |  |       |SHIFT |       |
            bindings = <
&trans &trans &trans &trans &trans &trans                      &trans &trans &trans &trans &trans    &trans
&trans &trans &trans &trans &trans &trans                      &trans &trans &trans &trans &trans    &trans
&trans &trans &trans &trans &trans &trans                      &trans &trans &trans &trans &trans    &trans
&trans &trans &trans &trans &trans &trans    &trans   &trans   &trans &trans &trans &trans &kp SPACE &trans
                            &trans &trans    &trans   &trans   &kp LSHFT &trans
            >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      | PREV | NEXT |                   | VOLD | VOLU  |       |      | BTCLR |BTCLRAL|
// |       |  `  |  _  |  -   |  +   |  =   |                   |  {   |   }   |   ^   |  [   |   ]   |BTNXT  |
// |       |     |  "  |  :   |  <   |  >   |                   |  ESC |   <-  |   v   |  ->  |  ->   |BTPRV  |
// |       |  !  |  @  |  #   |  $   |  %   |        |  |       |  Ë†   |   &   |   *   |  (   |   )   |       |
//                            |      |      |        |  |       |      |       |
            bindings = <
&trans &trans    &trans    &trans    &kp C_PREV &kp C_NEXT                 &kp K_VOL_DN &kp K_VOL_UP &trans    &trans    &bt BT_CLR &bt BT_CLR_ALL
&trans &kp GRAVE &kp UNDER &kp MINUS &kp PLUS   &kp EQUAL                  &kp LBRC     &kp RBRC     &kp UP    &kp LBKT  &kp RBKT   &bt BT_NXT 
&trans &trans    &kp DQT   &kp COLON &kp LT     &kp GT                     &kp ESC      &kp LEFT     &kp DOWN  &kp RIGHT &trans     &bt BT_PRV
&trans &kp EXCL  &kp AT    &kp HASH  &kp DLLR   &kp PRCNT  &trans   &trans &kp CARET    &kp AMPS     &kp STAR  &kp LPAR  &kp RPAR   &trans
                                     &trans     &trans     &trans   &trans &trans       &trans
            >;
        };
    };
};
